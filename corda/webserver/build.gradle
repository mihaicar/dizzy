apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'net.corda.plugins.publish-utils'

description 'Corda node web server'

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
    test {
        resources {
            srcDir "$rootDir/config/test"
        }
    }
    main {
        resources {
            srcDir "$rootDir/config/dev"
        }
    }
}

dependencies {
    compile project(':core')
    compile project(':finance')
    compile project(':client:rpc')
    compile project(':client:jackson')
    testCompile project(':node')

    // Web stuff: for HTTP[S] servlets
    compile "org.eclipse.jetty:jetty-servlet:$jetty_version"
    compile "org.eclipse.jetty:jetty-webapp:$jetty_version"
    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile "org.jolokia:jolokia-agent-war:$jolokia_version"
    compile "commons-fileupload:commons-fileupload:$fileupload_version"

    // Log4J: logging framework (with SLF4J bindings)
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    compile "org.apache.logging.log4j:log4j-core:$log4j_version"

    // JOpt: for command line flags.
    compile "net.sf.jopt-simple:jopt-simple:$jopt_simple_version"

    // Jersey for JAX-RS implementation for use in Jetty
    compile "org.glassfish.jersey.core:jersey-server:$jersey_version"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:$jersey_version"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:$jersey_version"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jersey_version"

    testCompile "junit:junit:$junit_version"
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}
