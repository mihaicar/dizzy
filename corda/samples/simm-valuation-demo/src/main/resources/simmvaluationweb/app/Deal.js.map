{"version":3,"file":"Deal.js","sourceRoot":"","sources":["file:///C:/work/corda-samples/simm-valuation-demo/src/main/web/tmp/broccoli_type_script_compiler-input_base_path-ZHoDtSjD.tmp/0/src/app/Deal.ts"],"names":[],"mappings":"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","sourcesContent":["import { DealViewModel } from './viewmodel/DealViewModel';\r\nimport { NodeService } from './node.service';\r\nimport { IRSService } from './irs.service';\r\nimport { FixedLegModel } from './model/FixedLegModel';\r\nimport { FloatingLegModel } from './model/FloatingLegModel';\r\nimport { CommonModel } from './model/CommonModel';\r\nimport { FixedLegViewModel } from './viewmodel/FixedLegViewModel';\r\nimport { FloatingLegViewModel } from './viewmodel/FloatingLegViewModel';\r\nimport { CommonViewModel } from './viewmodel/CommonViewModel';\r\nimport * as _ from 'underscore';\r\n\r\nlet calculationModel = {\r\n  expression: \"( fixedLeg.notional.quantity * (fixedLeg.fixedRate.ratioUnit.value)) - (floatingLeg.notional.quantity * (calculation.fixingSchedule.get(context.getDate('currentDate')).rate.ratioUnit.value))\",\r\n  floatingLegPaymentSchedule: {\r\n\r\n  },\r\n  fixedLegPaymentSchedule: {\r\n\r\n  }\r\n};\r\n\r\nlet fixedRateModel = {\r\n  ratioUnit: {\r\n    value: 0.01 // %\r\n  }\r\n};\r\n\r\nlet indexLookup = {\r\n  \"GBP\": \"ICE LIBOR\",\r\n  \"USD\": \"ICE LIBOR\",\r\n  \"EUR\": \"EURIBOR\"\r\n};\r\n\r\nlet calendarLookup = {\r\n  \"GBP\": \"London\",\r\n  \"USD\": \"NewYork\",\r\n  \"EUR\": \"London\"\r\n};\r\n\r\nlet now = () => {\r\n  return new Date();\r\n}\r\n\r\n// Copy the value of the field from b to a if it exists on both objects.\r\nlet unionMerge = (a, b) => {\r\n  for (let key in b) {\r\n    if (a.hasOwnProperty(key)) {\r\n      a[key] = b[key];\r\n    }\r\n  }\r\n}\r\n\r\nexport class Deal {\r\n  tradeId = `T${now().getUTCFullYear()}-${now().getUTCMonth()}-${now().getUTCDate()}.${now().getUTCHours()}:${now().getUTCMinutes()}:${now().getUTCSeconds()}:${now().getUTCMilliseconds()}`\r\n\r\n  constructor(private dealViewModel: DealViewModel, private nodeService: NodeService, private irsService: IRSService) {}\r\n\r\n  toFixedLegModel = (fixedLegVM: FixedLegViewModel, commonVM: CommonViewModel) => {\r\n    let fixedLeg = new FixedLegModel();\r\n\r\n    unionMerge(fixedLeg, fixedLegVM);\r\n\r\n    fixedLeg.notional.token = commonVM.baseCurrency;\r\n    fixedLeg.effectiveDate = commonVM.effectiveDate;\r\n    fixedLeg.terminationDate = commonVM.terminationDate;\r\n    fixedLeg.fixedRate = { ratioUnit: { value: Number(fixedLegVM.fixedRate) / 100 } };\r\n    fixedLeg.dayCountBasisDay = this.irsService.lookupDayCountBasis(fixedLegVM.dayCountBasis).day;\r\n    fixedLeg.dayCountBasisYear = this.irsService.lookupDayCountBasis(fixedLegVM.dayCountBasis).year;\r\n    fixedLeg.paymentCalendar = calendarLookup[commonVM.baseCurrency];\r\n\r\n    return fixedLeg;\r\n  };\r\n\r\n  toFloatingLegModel = (floatingLegVM: FloatingLegViewModel, commonVM: CommonViewModel) => {\r\n    let floatingLeg = new FloatingLegModel();\r\n\r\n    unionMerge(floatingLeg, floatingLegVM);\r\n\r\n    floatingLeg.notional.token = commonVM.baseCurrency;\r\n    floatingLeg.effectiveDate = commonVM.effectiveDate;\r\n    floatingLeg.terminationDate = commonVM.terminationDate;\r\n    floatingLeg.dayCountBasisDay = this.irsService.lookupDayCountBasis(floatingLegVM.dayCountBasis).day;\r\n    floatingLeg.dayCountBasisYear = this.irsService.lookupDayCountBasis(floatingLegVM.dayCountBasis).year;\r\n    floatingLeg.index = indexLookup[commonVM.baseCurrency];\r\n    floatingLeg.fixingCalendar = [calendarLookup[commonVM.baseCurrency]];\r\n    floatingLeg.paymentCalendar = [calendarLookup[commonVM.baseCurrency]];\r\n\r\n    return floatingLeg;\r\n  };\r\n\r\n  toCommonModel = (commonVM: CommonViewModel) => {\r\n    let common = new CommonModel();\r\n\r\n    unionMerge(common, commonVM);\r\n\r\n    common.tradeID = this.tradeId;\r\n    common.eligibleCurrency = commonVM.baseCurrency;\r\n    common.independentAmounts.token = commonVM.baseCurrency;\r\n    common.threshold.token = commonVM.baseCurrency;\r\n    common.minimumTransferAmount.token = commonVM.baseCurrency;\r\n    common.rounding.token = commonVM.baseCurrency;\r\n\r\n    return common;\r\n  };\r\n\r\n  toJson = () => {\r\n    let commonVM = this.dealViewModel.common;\r\n    let floatingLegVM = this.dealViewModel.floatingLeg;\r\n    let fixedLegVM = this.dealViewModel.fixedLeg;\r\n\r\n    let fixedLeg = this.toFixedLegModel(fixedLegVM, commonVM);\r\n    let floatingLeg = this.toFloatingLegModel(floatingLegVM, commonVM);\r\n    let common = this.toCommonModel(commonVM);\r\n    _.assign(fixedLeg.fixedRate, fixedRateModel);\r\n\r\n    let json = {\r\n      fixedLeg: fixedLeg,\r\n      floatingLeg: floatingLeg,\r\n      calculation: calculationModel,\r\n      common: common\r\n    }\r\n\r\n    return json;\r\n  };\r\n};\r\n"]}